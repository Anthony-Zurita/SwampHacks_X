{"ast":null,"code":"var _jsxFileName = \"/Users/leonardocobaleda/Documents/GitHub/Hackathon/Untitled/src/pages/TextToSpeechDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { OpenAI } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY\n});\nconst TextToSpeechDashboard = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!inputText) return alert(\"Please enter some text.\");\n    setIsProcessing(true);\n    try {\n      // Directly call the OpenAI API\n      const mp3 = await openai.audio.speech.create({\n        model: \"tts-1\",\n        voice: \"alloy\",\n        input: inputText\n      });\n      const buffer = Buffer.from(await mp3.arrayBuffer());\n      const blob = new Blob([buffer], {\n        type: \"audio/mpeg\"\n      });\n      const url = URL.createObjectURL(blob);\n\n      // Play the audio\n      const audio = new Audio(url);\n      audio.play();\n    } catch (error) {\n      console.error(error);\n      alert(\"Error generating text-to-speech. Please try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto bg-white shadow rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Text-to-Speech Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full border p-2 rounded mb-4\",\n        rows: \"4\",\n        placeholder: \"Enter text to convert to speech\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `w-full bg-blue-500 text-white py-2 px-4 rounded ${isProcessing ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n        disabled: isProcessing,\n        children: isProcessing ? \"Processing...\" : \"Convert to Speech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeechDashboard, \"n9Bp1fGyW12O4h9qyDejlNVSZ40=\");\n_c = TextToSpeechDashboard;\nexport default TextToSpeechDashboard;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeechDashboard\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","TextToSpeechDashboard","_s","inputText","setInputText","isProcessing","setIsProcessing","handleSubmit","event","preventDefault","alert","mp3","audio","speech","create","model","voice","input","buffer","Buffer","from","arrayBuffer","blob","Blob","type","url","URL","createObjectURL","Audio","play","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","placeholder","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["/Users/leonardocobaleda/Documents/GitHub/Hackathon/Untitled/src/pages/TextToSpeechDashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { OpenAI } from \"openai\";\n\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n});\n\nconst TextToSpeechDashboard = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!inputText) return alert(\"Please enter some text.\");\n\n    setIsProcessing(true);\n\n    try {\n      // Directly call the OpenAI API\n      const mp3 = await openai.audio.speech.create({\n        model: \"tts-1\",\n        voice: \"alloy\",\n        input: inputText,\n      });\n\n      const buffer = Buffer.from(await mp3.arrayBuffer());\n      const blob = new Blob([buffer], { type: \"audio/mpeg\" });\n      const url = URL.createObjectURL(blob);\n\n      // Play the audio\n      const audio = new Audio(url);\n      audio.play();\n    } catch (error) {\n      console.error(error);\n      alert(\"Error generating text-to-speech. Please try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto bg-white shadow rounded\">\n      <h2 className=\"text-xl font-bold mb-4\">Text-to-Speech Dashboard</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          className=\"w-full border p-2 rounded mb-4\"\n          rows=\"4\"\n          placeholder=\"Enter text to convert to speech\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className={`w-full bg-blue-500 text-white py-2 px-4 rounded ${\n            isProcessing ? \"opacity-50 cursor-not-allowed\" : \"\"\n          }`}\n          disabled={isProcessing}\n        >\n          {isProcessing ? \"Processing...\" : \"Convert to Speech\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TextToSpeechDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}