{"ast":null,"code":"var _jsxFileName = \"/Users/leonardocobaleda/Documents/GitHub/Hackathon/Untitled/src/components/api/TextToSpeech.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport OpenAI from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\nconst TextToSpeechDashboard = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!inputText) return alert(\"Please enter some text.\");\n    setIsProcessing(true);\n    const directoryPath = path.resolve(\"./buffer\");\n    const speechFile = path.resolve(directoryPath, \"speech.mp3\");\n    try {\n      if (!fs.existsSync(directoryPath)) {\n        fs.mkdirSync(directoryPath);\n      }\n\n      // Generate MP3 from OpenAI\n      const mp3 = await openai.audio.speech.create({\n        model: \"tts-1\",\n        voice: \"alloy\",\n        input: inputText\n      });\n      console.log(\"Api works\");\n\n      // Convert and save file\n      const buffer = Buffer.from(await mp3.arrayBuffer());\n      await fs.promises.writeFile(speechFile, buffer);\n      console.log(\"file created\");\n\n      // Provide the file to the user\n      const fileUrl = URL.createObjectURL(new Blob([buffer], {\n        type: \"audio/mpeg\"\n      }));\n      setAudioUrl(fileUrl);\n      console.log(\"url created\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error generating or saving the audio file.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto bg-white shadow rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Text-to-Speech Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full border p-2 rounded mb-4\",\n        rows: \"4\",\n        placeholder: \"Enter text to convert to speech\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `w-full bg-blue-500 text-white py-2 px-4 rounded ${isProcessing ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n        disabled: isProcessing,\n        children: isProcessing ? \"Processing...\" : \"Convert to Speech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium\",\n        children: \"Generated Audio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioUrl,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeechDashboard, \"vu7ZIX4ZSpHTDfNRJaQyV6NaTHI=\");\n_c = TextToSpeechDashboard;\nexport default TextToSpeechDashboard;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeechDashboard\");","map":{"version":3,"names":["React","useState","fs","path","OpenAI","jsxDEV","_jsxDEV","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","TextToSpeechDashboard","_s","inputText","setInputText","isProcessing","setIsProcessing","audioUrl","setAudioUrl","handleSubmit","event","preventDefault","alert","directoryPath","resolve","speechFile","existsSync","mkdirSync","mp3","audio","speech","create","model","voice","input","console","log","buffer","Buffer","from","arrayBuffer","promises","writeFile","fileUrl","URL","createObjectURL","Blob","type","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","placeholder","value","onChange","e","target","disabled","controls","src","_c","$RefreshReg$"],"sources":["/Users/leonardocobaleda/Documents/GitHub/Hackathon/Untitled/src/components/api/TextToSpeech.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true,\n});\n\nconst TextToSpeechDashboard = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!inputText) return alert(\"Please enter some text.\");\n\n    setIsProcessing(true);\n\n    const directoryPath = path.resolve(\"./buffer\");\n    const speechFile = path.resolve(directoryPath, \"speech.mp3\");\n\n    try {\n      if (!fs.existsSync(directoryPath)) {\n        fs.mkdirSync(directoryPath);\n      }\n\n      // Generate MP3 from OpenAI\n      const mp3 = await openai.audio.speech.create({\n        model: \"tts-1\",\n        voice: \"alloy\",\n        input: inputText,\n      });\n      console.log(\"Api works\");\n\n      // Convert and save file\n      const buffer = Buffer.from(await mp3.arrayBuffer());\n      await fs.promises.writeFile(speechFile, buffer);\n\n      console.log(\"file created\");\n\n      // Provide the file to the user\n      const fileUrl = URL.createObjectURL(\n        new Blob([buffer], { type: \"audio/mpeg\" })\n      );\n      setAudioUrl(fileUrl);\n      console.log(\"url created\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error generating or saving the audio file.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto bg-white shadow rounded\">\n      <h2 className=\"text-xl font-bold mb-4\">Text-to-Speech Dashboard</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          className=\"w-full border p-2 rounded mb-4\"\n          rows=\"4\"\n          placeholder=\"Enter text to convert to speech\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          className={`w-full bg-blue-500 text-white py-2 px-4 rounded ${\n            isProcessing ? \"opacity-50 cursor-not-allowed\" : \"\"\n          }`}\n          disabled={isProcessing}\n        >\n          {isProcessing ? \"Processing...\" : \"Convert to Speech\"}\n        </button>\n      </form>\n\n      {audioUrl && (\n        <div className=\"mt-4\">\n          <h3 className=\"text-lg font-medium\">Generated Audio:</h3>\n          <audio controls>\n            <source src={audioUrl} type=\"audio/mpeg\" />\n            Your browser does not support the audio element.\n          </audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextToSpeechDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}